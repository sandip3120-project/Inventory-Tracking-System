# Generated by Django 5.2.4 on 2025-07-23 11:30

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=4, unique=True)),
                ('name', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('material_number', models.CharField(max_length=50, unique=True)),
                ('description', models.CharField(max_length=200)),
                ('colour', models.CharField(max_length=50)),
                ('thickness_value', models.DecimalField(decimal_places=3, default=0.0, max_digits=6, verbose_name='Thickness')),
                ('thickness_unit', models.CharField(choices=[('GAUGE', 'Gauge'), ('MICRON', 'Micron')], default='MICRON', max_length=10, verbose_name='Unit')),
            ],
        ),
        migrations.CreateModel(
            name='SiteConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enable_qa_scan', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Site Configuration',
                'verbose_name_plural': 'Site Configuration',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location_code', models.CharField(max_length=10, unique=True)),
                ('row', models.CharField(blank=True, max_length=5)),
                ('column', models.CharField(blank=True, max_length=5)),
                ('type', models.CharField(choices=[('STORAGE', 'Storage'), ('DEPT', 'Dept'), ('DISPATCH', 'Dispatch')], max_length=20)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='locations', to='warehouse.department')),
            ],
        ),
        migrations.CreateModel(
            name='Batch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_number', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='warehouse.material')),
            ],
            options={
                'unique_together': {('material', 'batch_number')},
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(max_length=20)),
                ('pin', models.CharField(max_length=4)),
                ('id_card', models.ImageField(upload_to='id_cards/')),
                ('needs_approval', models.BooleanField(default=True)),
                ('requested_group', models.CharField(choices=[('Factory Admin', 'Factory Admin'), ('Plant Manager', 'Plant Manager'), ('Stock Keeper', 'Stock Keeper'), ('Operator', 'Operator'), ('Forklift Driver', 'Forklift Driver'), ('Dept SK', 'Dept SK'), ('View Only', 'View Only')], max_length=50)),
                ('extra_access', models.CharField(blank=True, help_text='Stock Keeper only: commaâ€‘separated extra dept codes', max_length=100)),
                ('department', models.ForeignKey(blank=True, default=1, help_text='Home department', null=True, on_delete=django.db.models.deletion.PROTECT, to='warehouse.department')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Roll',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('roll_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('weight_kg', models.FloatField()),
                ('current_location', models.CharField(blank=True, max_length=20, null=True)),
                ('status', models.CharField(default='IN_STOCK', max_length=20)),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='warehouse.batch')),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='warehouse.customer')),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('QA_SCAN', 'QA Scan'), ('PUTAWAY', 'Putaway'), ('TRANSFER', 'Transfer'), ('DISPATCH', 'Dispatch'), ('TEMP_STORAGE', 'Temp Storage')], max_length=20)),
                ('user', models.CharField(max_length=50)),
                ('scanned_at', models.DateTimeField(auto_now_add=True)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='warehouse.location')),
                ('roll', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='warehouse.roll')),
            ],
        ),
    ]
